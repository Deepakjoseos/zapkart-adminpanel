{"version":3,"sources":["views/app-views/dashboards/settings/settingsForm/GeneralField.js","services/settings.js","views/app-views/dashboards/settings/settingsForm/index.js","views/app-views/dashboards/settings/add-settings/index.js","views/app-views/dashboards/settings/edit-settings/index.js","views/app-views/dashboards/settings/index.js","components/shared-components/EllipsisDropdown/index.js","components/layout-components/PageHeaderAlt.js"],"names":["rules","Select","Option","name","required","message","address","email","phone","facebookUrl","instagramUrl","twitterUrl","vendorCommission","GeneralField","setmode","useState","title","Item","label","placeholder","type","whatsappNo","List","fields","add","remove","console","log","map","field","style","display","width","align","fieldKey","length","MinusCircleOutlined","onClick","key","icon","PlusOutlined","dropdownStyle","mode","settingsService","apiRoute","getSettings","a","fetch","url","method","res","data","createSettings","editSettings","id","TabPane","Tabs","SettingsForm","props","param","useHistory","Form","useForm","form","submitLoading","setSubmitLoading","setSettings","setMode","useEffect","setFieldsValue","deliveryCharges","metaTitle","metaDescription","metakeywords","onFinish","validateFields","then","values","sendingValues","created","success","catch","info","error","layout","className","initialValues","startAmount","endAmount","charge","PageHeaderAlt","overlap","Flex","mobileFlex","justifyContent","alignItems","htmlType","loading","defaultActiveKey","marginTop","tab","AddSettings","EditSettings","match","params","Settings","exact","from","to","path","component","EllipsisDropdown","overlay","menu","placement","trigger","defaultProps","connect","navType","theme","children","background","widthOffset","setWidthOffset","ref","useRef","NAV_TYPE_TOP","windowSize","window","innerWidth","pageHeaderSize","current","offsetWidth","backgroundImage","marginRight","marginLeft","paddingLeft","paddingRight","getStyle"],"mappings":"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","file":"static/js/91.0e980229.chunk.js","sourcesContent":["import { Input, Row, Col, Card, Form, Select, Button, Space, InputNumber } from \"antd\";\r\nimport { SearchOutlined, EyeOutlined } from \"@ant-design/icons\";\r\nimport EllipsisDropdown from \"components/shared-components/EllipsisDropdown\";\r\nimport { useState } from \"react\";\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons'\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst rules = {\r\n  name: [\r\n    {\r\n      required: true,\r\n      message: \"Required\",\r\n    },\r\n  ],\r\n  address: [\r\n    {\r\n      required: false,\r\n      message: \"Required\",\r\n\r\n    },\r\n  ],\r\n  email: [\r\n    {\r\n      required: false,\r\n      message: \"Required\",\r\n\r\n    },\r\n  ],\r\n\r\n  phone: [\r\n    {\r\n      required: true,\r\n      message: \"Required\",\r\n    },\r\n  ],\r\n  facebookUrl: [\r\n    {\r\n      required: true,\r\n      message: \"Required\",\r\n    },\r\n  ],\r\n  instagramUrl: [\r\n    {\r\n      required: true,\r\n      message: \"Required\",\r\n    },\r\n  ],\r\n  twitterUrl: [\r\n    {\r\n      required: true,\r\n      message: \"Required\",\r\n    },\r\n  ],\r\n  vendorCommission: [\r\n    {\r\n      required: true,\r\n      message: \"Required\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst GeneralField = ({ setmode }) => {\r\n  const [deliveryCharges, setDeliveryCharges] = useState([])\r\n  return (\r\n    // <Row gutter={16}>\r\n    //   <Col xs={24} sm={24} md={24}>\r\n    <>\r\n      <Card title=\"User Info\">\r\n        <>\r\n         \r\n          <Form.Item\r\n            name=\"name\"\r\n            label=\"Website Name\"\r\n            rules={rules.name}\r\n          >\r\n            <Input placeholder=\"Name\" type=\"text\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"address\"\r\n            label=\"Address\"\r\n            rules={rules.address}\r\n          >\r\n            <Input placeholder=\"Address\" type=\"text\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            rules={rules.email}\r\n          >\r\n            <Input placeholder=\"Email\" type=\"text\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"phone\"\r\n            label=\"Phone\"\r\n            rules={rules.phone}\r\n          >\r\n            <Input placeholder=\"Phone\" type=\"text\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"facebookUrl\"\r\n            label=\"Facebook\"\r\n            rules={rules.facebookUrl}\r\n          >\r\n            <Input placeholder=\"Facebook\" type=\"text\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"instagramUrl\"\r\n            label=\"Instagram\"\r\n            rules={rules.instagramUrl}\r\n          >\r\n            <Input placeholder=\"Instagram\" type=\"text\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"twitterUrl\"\r\n            label=\"Twitter\"\r\n            rules={rules.twitterUrl}\r\n          >\r\n            <Input placeholder=\"Twitter\" type=\"text\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"whatsappNo\"\r\n            label=\"WhatsApp Number\"\r\n            rules={rules.whatsappNo}\r\n          >\r\n            <Input placeholder=\"Whatsapp Number\" type=\"text\" />\r\n          </Form.Item>\r\n          {/* <Form.Item\r\n            name=\"vendorCommission\"\r\n            label=\"Vendor Commission\"\r\n            rules={rules.vendorCommission}\r\n          >\r\n            <Input placeholder=\"Vendor Commission\" type=\"text\" />\r\n          </Form.Item> */}\r\n          {/* </div> */}\r\n\r\n        </>\r\n        <div>\r\n         <p>Delivery Charges</p>\r\n          <Form.List name=\"deliveryCharges\">\r\n            {(fields, { add, remove }) => {\r\n              console.log(fields, 'show-filelds')\r\n              return (\r\n                <>\r\n                  {fields.map((field) => (\r\n                    <Space\r\n                      key={field.key}\r\n                      style={{ display: 'flex', width: '100%' }}\r\n                      align=\"baseline\"\r\n                    >\r\n                      <Form.Item\r\n                        {...field} label=\"Start Amount\"\r\n                        rules={[\r\n                          { required: true, message: 'required' },\r\n                        ]}\r\n                        name={[field.name, 'startAmount']}\r\n                        fieldKey={[field.fieldKey, 'startAmount']}\r\n                      >\r\n                        <InputNumber\r\n                          placeholder=\"Start Amount\"\r\n                          style={{ width: '100%' }}\r\n\r\n                        />\r\n                      \r\n                      </Form.Item>\r\n                      <Form.Item label=\"end Amount\"\r\n                        {...field}\r\n                        rules={[\r\n                          { required: true, message: 'required' },\r\n                        ]}\r\n                        name={[field.name, 'endAmount']}\r\n                        fieldKey={[field.fieldKey, 'quantity']}\r\n                      >\r\n                        <InputNumber\r\n                          placeholder=\"End Amount\"\r\n                          style={{ width: '100%' }}\r\n\r\n\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item label=\"Charge\"\r\n                        {...field}\r\n                        rules={[\r\n                          { required: true, message: 'required' },\r\n                        ]}\r\n                        name={[field.name, 'charge']}\r\n                        fieldKey={[field.fieldKey, 'charge']}\r\n                      >\r\n                        <InputNumber\r\n                          placeholder=\"Charge\"\r\n                          style={{ width: '100%' }}\r\n                        />\r\n                      </Form.Item>\r\n                      {fields.length > 1 && (\r\n                      <MinusCircleOutlined\r\n                           onClick={() => {\r\n                                // onAttributeChange()\r\n                             remove(field.name)\r\n                              // checkPrescriptionRequired()\r\n                           }}\r\n                         />   \r\n                       )} \r\n                    </Space>\r\n                  ))}\r\n                  <Form.Item>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      onClick={() => {\r\n                        add()\r\n                        // checkPrescriptionRequired()\r\n                      }}\r\n                      icon={<PlusOutlined />}\r\n                    >\r\n                      Add Delivery charges\r\n                    </Button>\r\n                  </Form.Item>\r\n                </>\r\n              )\r\n            }}\r\n          </Form.List>\r\n        </div>\r\n\r\n      </Card>\r\n      <Card title=\"SEO\">\r\n          <Form.Item name=\"metaTitle\" label=\"Meta Title\">\r\n            <Input placeholder=\"Meta Title\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"metaDescription\" label=\"Meta Description\">\r\n            <Input placeholder=\"Meta Description\" />\r\n          </Form.Item>\r\n          {/* <Form.Item name=\"keywords\" label=\"Keywords\">\r\n            <Input placeholder=\"Keywords\" />\r\n          </Form.Item> */}\r\n          <Form.Item name=\"metakeywords\" label=\"Meta Keywords\">\r\n            <Select\r\n              dropdownStyle={{ display: 'none' }}\r\n              mode=\"tags\"\r\n              style={{\r\n                width: '100%',\r\n              }}\r\n              placeholder=\"Keywords\"\r\n            ></Select>\r\n          </Form.Item>\r\n          {/* <Form.Item name=\"slug\" label=\"Slug\" rules={rules.slug}>\r\n            <Input placeholder=\"Slug\" />\r\n          </Form.Item> */}\r\n         \r\n        \r\n        </Card>\r\n      \r\n\r\n    </>\r\n    //   </Col>\r\n    // </Row>\r\n  )\r\n}\r\n\r\nexport default GeneralField;\r\n","import fetch from 'auth/FetchInterceptor'\r\n\r\nconst settingsService = {}\r\nconst apiRoute = '/setting'\r\n\r\nsettingsService.getSettings= async function () {\r\n  try {\r\n    const res = await fetch({\r\n      url: apiRoute,\r\n      method: 'get',\r\n    })\r\n    console.log('res-return',res)\r\n    return res.data\r\n  } catch (err) {\r\n    console.log(err, 'show-err')\r\n  }\r\n}\r\n\r\nsettingsService.createSettings = async function (data) {\r\n    try {\r\n      const res = await fetch({\r\n        url: `${apiRoute}`,\r\n        method: 'post',\r\n        data: data,\r\n      })\r\n      return res\r\n    } catch (err) {\r\n      console.log(err, 'show-err')\r\n    }\r\n}\r\nsettingsService.editSettings = async function (id, data) {\r\n    try {\r\n      const res = await fetch({\r\n        url: `${apiRoute}`,\r\n        method: 'put',\r\n        data: data,\r\n      })\r\n      return res\r\n    } catch (err) {\r\n      console.log(err, 'show-err')\r\n    }\r\n  }\r\n  export default settingsService","import React, { useState, useEffect } from \"react\";\r\nimport PageHeaderAlt from \"components/layout-components/PageHeaderAlt\";\r\nimport { Tabs, Form, Button, message } from \"antd\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport GeneralField from \"./GeneralField\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport authAdminService from \"services/auth/admin\";\r\nimport settingsService from \"services/settings\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst ADD = \"ADD\";\r\nconst EDIT = \"EDIT\";\r\n\r\nconst SettingsForm = (props) => {\r\n  const { mode = ADD, param } = props;\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n  console.log(mode);\r\n  const [submitLoading, setSubmitLoading] = useState(false);\r\n  const [settings, setSettings] = useState({})\r\nconst[setmode,setMode]=useState('')\r\n  useEffect(()=>{\r\n    const getSettings = async () => {\r\n\r\n      const data = await settingsService.getSettings()\r\n      if (data) {\r\n        // const isEmpty = Object.keys(data).length === 0;\r\n       \r\n    \r\n          setMode('Edit')\r\n\r\n          form.setFieldsValue({\r\n            name: data.name,\r\n            address: data.address,\r\n            email: data.email,\r\n            phone: data.phone,\r\n            facebookUrl: data.facebookUrl,\r\n            instagramUrl: data.instagramUrl,\r\n            twitterUrl: data.twitterUrl,\r\n            vendorCommission:data.vendorCommission,\r\n            deliveryCharges: data.deliveryCharges,\r\n            metaTitle: data.metaTitle,\r\n            metaDescription: data.metaDescription,\r\n            metakeywords: data.metakeywords,\r\n            whatsappNo:data.whatsappNo\r\n          })\r\n        \r\n        setSettings(data)\r\n        console.log(data, 'settings')\r\n      }else {\r\n        setMode('Add')\r\n\r\n      }\r\n    }\r\n  \r\n    getSettings()\r\n  \r\n  },[])\r\n\r\n  // Trigger When Submit Button pressed\r\n  const onFinish = async () => {\r\n    setSubmitLoading(true);\r\n    form\r\n      .validateFields()\r\n      .then(async (values) => {\r\n        // const deliveryCharges={\r\n        //   startAmount:values?.startAmount,\r\n        //   endAmount:values?.endAmount,\r\n        //   charge:values?.charge\r\n        // }\r\n        const sendingValues =\r\n        {\r\n          name: values?.name,\r\n          address: values?.address,\r\n          email: values?.email,\r\n          phone: values?.phone,\r\n          facebookUrl: values?.facebookUrl,\r\n          instagramUrl: values?.instagramUrl,\r\n          twitterUrl: values?.twitterUrl,\r\n          vendorCommission:values?.vendorCommission,\r\n          deliveryCharges: values?.deliveryCharges,\r\n          whatsappNo:values?.whatsappNo\r\n        }\r\n\r\n\r\n\r\n\r\n        if (setmode === 'Add') {\r\n            console.log(sendingValues, \"values=====\");\r\n\r\n          const created = await settingsService.createSettings(sendingValues);\r\n          if (created) {\r\n            console.log(created);\r\n            message.success(`Created New Settings`);\r\n            // history.goBack();\r\n          }\r\n        }\r\n        if (setmode === 'Edit') {\r\n\r\n          const edited = await settingsService.editSettings(\r\n            param.id,\r\n            values\r\n          )\r\n          if (edited) {\r\n            message.success(`Edited settings list`)\r\n            // history.goBack()\r\n          }\r\n        }\r\n        setSubmitLoading(false)\r\n      })\r\n      .catch((info) => {\r\n        setSubmitLoading(false)\r\n        console.log('info', info)\r\n        message.error('Please enter all required field ')\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n       \r\n        layout=\"vertical\"\r\n        form={form}\r\n        name=\"advanced_search\"\r\n        className=\"ant-advanced-search-form\"\r\n        initialValues={{\r\n          deliveryCharges: [\r\n            {\r\n              startAmount: '',\r\n              endAmount: '',\r\n              charge:''\r\n            },\r\n          ],\r\n        }}\r\n      >\r\n        <PageHeaderAlt className=\"border-bottom\" overlap>\r\n          <div className=\"container\">\r\n            <Flex\r\n              className=\"py-2\"\r\n              mobileFlex={false}\r\n              justifyContent=\"between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <h2 className=\"mb-3\">\r\n                {setmode === \"ADD\" ? \"Add New settings\" : `Edit settings`}{\" \"}\r\n              </h2>\r\n              <div className=\"mb-3\">\r\n                {/* <Button\r\n                  className=\"mr-2\"\r\n                  onClick={() =>\r\n                    history.push(\"/app/dashboards/settings/edit-settings/user-list\")\r\n                  }\r\n                >\r\n                  Discard\r\n                </Button> */}\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={() => onFinish()}\r\n                  htmlType=\"submit\"\r\n                  loading={submitLoading}\r\n                >\r\n                  {setmode === \"ADD\" ? \"Add\" : `Save`}\r\n                </Button>\r\n              </div>\r\n            </Flex>\r\n          </div>\r\n        </PageHeaderAlt>\r\n        <div className=\"container\">\r\n          <Tabs defaultActiveKey=\"1\" style={{ marginTop: 30 }}>\r\n            <TabPane tab=\"General\" key=\"1\">\r\n              <GeneralField mode={setmode} />\r\n            </TabPane>\r\n          </Tabs>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SettingsForm;\r\n","import React from 'react'\r\nimport SettingsForm from '../settingsForm'\r\n\r\nconst AddSettings = () => {\r\n  return  <SettingsForm mode=\"ADD\" />\r\n}\r\n\r\nexport default AddSettings\r\n","\r\nimport React from 'react'\r\n\r\nimport SettingsForm from '../settingsForm'\r\n\r\nconst EditSettings = (props) => {\r\n  return <SettingsForm mode=\"EDIT\" param={props.match.params} />\r\n}\r\n\r\nexport default EditSettings\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\n\r\nimport AddSettings from './add-settings'\r\nimport EditSettings from './edit-settings'\r\n// import Orders from './orders'\r\n\r\nconst Settings = (props) => {\r\n  const { match } = props\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from={`${match.url}`}\r\n        to={`${match.url}/edit-settings`}\r\n      />\r\n      <Route path={`${match.url}/add-settings`} component={AddSettings} />\r\n      <Route\r\n        path={`${match.url}/edit-settings`}\r\n        component={EditSettings}\r\n      />\r\n      {/* <Route\r\n        path={`${match.url}/settings-list`}\r\n        component={SettingsList}\r\n      /> */}\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import React from 'react'\r\nimport { Dropdown, Menu } from 'antd'\r\nimport { EllipsisOutlined } from '@ant-design/icons'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = (props) => {\r\n  return (\r\n    <Dropdown\r\n      overlay={props.menu}\r\n      placement={props.placement}\r\n      trigger={['click']}\r\n    >\r\n      <div className=\"ellipsis-dropdown\">\r\n        <EllipsisOutlined />\r\n      </div>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n  trigger: PropTypes.string,\r\n  placement: PropTypes.string,\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n  trigger: 'click',\r\n  placement: 'bottomRight',\r\n  menu: <Menu />,\r\n}\r\n\r\nexport default EllipsisDropdown\r\n","import React, { useRef, useEffect, useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\n\r\nexport const PageHeaderAlt = ({children, background, className, overlap, navType}) => {\r\n\tconst [widthOffset, setWidthOffset] = useState(0)\r\n\tconst ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tconst windowSize = window.innerWidth\r\n\t\t\tconst pageHeaderSize = ref.current.offsetWidth\r\n\t\t\tsetWidthOffset( (windowSize - pageHeaderSize) / 2 )\r\n\t\t}\r\n\t}, [navType]);\r\n\t\r\n\tconst getStyle = () => {\r\n\t\tlet style = { backgroundImage: background ? `url(${background})` : 'none' } \r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tstyle.marginRight = -widthOffset\r\n\t\t\tstyle.marginLeft = -widthOffset\r\n\t\t\tstyle.paddingLeft = 0\r\n\t\t\tstyle.paddingRight = 0\r\n\t\t}\r\n\t\treturn style\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={ref}\r\n\t\t\tclassName={`page-header-alt ${className ? className : ''} ${overlap && 'overlap'}`} \r\n\t\t\tstyle={getStyle()}\r\n\t\t>\r\n\t\t\t{navType === NAV_TYPE_TOP ? <div className=\"container\">{children}</div> : <>{children}</>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nPageHeaderAlt.propTypes = {\r\n  children: PropTypes.node,\r\n\tbackground: PropTypes.string,\r\n\tclassName: PropTypes.string,\r\n\toverlap: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType } =  theme;\r\n  return { navType }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(PageHeaderAlt);"],"sourceRoot":""}